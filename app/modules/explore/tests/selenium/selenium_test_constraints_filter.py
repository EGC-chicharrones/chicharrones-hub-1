# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestExploreconstraints():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_ConstraintsFilter(self):
    self.driver.get("http://127.0.0.1:5000/")
    self.driver.set_window_size(1920, 1048)
    self.driver.find_element(By.LINK_TEXT, "Explore").click()
    self.driver.find_element(By.ID, "constraints").send_keys("1")
    self.driver.find_element(By.ID, "constraints").click()
    self.driver.find_element(By.ID, "constraints").send_keys("2")
    self.driver.find_element(By.ID, "constraints").click()
    self.driver.find_element(By.ID, "constraints").send_keys("3")
    self.driver.find_element(By.ID, "constraints").click()
    element = self.driver.find_element(By.ID, "constraints")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "constraints").send_keys("4")
    self.driver.find_element(By.ID, "constraints").click()
    self.driver.find_element(By.ID, "constraints").send_keys("5")
    self.driver.find_element(By.ID, "constraints").click()
    self.driver.find_element(By.ID, "constraints").send_keys("6")
    self.driver.find_element(By.ID, "constraints").click()
    self.driver.find_element(By.ID, "constraints").send_keys("7")
    self.driver.find_element(By.ID, "constraints").click()
    self.driver.find_element(By.ID, "clear-filters").click()
    element = self.driver.find_element(By.ID, "clear-filters")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
  
